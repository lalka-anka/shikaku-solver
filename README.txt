Приложение « Shikaku» 
Версия 1.0 Автор: Ильина Анна (anna.ilina.21.2000@gmail.com) 

Описание 
Вход: игровая карта
Выход: решение головоломки

Требования 
Python версии не ниже 3.6 
Установленный пакет numpy

Состав 
Запуск программы: main.py
Решатель головоломки: solver.py
Взаимодействие с игровым полем: state.py
Количество различных разбиений для решения: get_count_solutions.py
Отрисовка GUI: rendering.py
Сторонние библиотеки: requirements.txt
Часть парсинга: parsing.py
Модуль, преобразующий строку с решением в матрицу: process_str_matrix.py
Соотношение цветов и элементов матрицы: get_dict_with_values.py
Создание раскрашенных матриц: create_color_matrix.py
Работа с неквадратными матрицами: process_not_square_mat.py


Справка по запуску:
python3 main.py --help

Пример запуска:
_______________________________________________________________________________________
По ключу -gui true будет предложен удобный пользовательский интерфейс
_______________________________________________________________________________________
Если вы вводите игровую карту вручную, то она должна быть следующего вида:


Исходная карта -- 2 0 0 0 0     
                  2 2 0 0 0
                  0 0 0 0 9
                  4 0 0 4 0
                  0 0 2 0 0

Ввод: '2 0 0 0 0 | 2 2 0 0 0 | 0 0 0 0 9 | 4 0 0 4 0 | 0 0 2 0 0' (кавычки обязательны)

_______________________________________________________________________________________

Если вы используете текстовый документ, то он должен быть следующего вида: 

2 0 4 0 0 2 0
0 0 0 6 0 0 0
4 0 2 0 4 4 0
0 0 0 0 0 4 0
0 0 4 0 2 0 0
0 2 0 0 0 0 2
0 0 0 4 3 0 0

_______________________________________________________________________________________
python3 main.py -gui true -len 5 -wd 3 -- будет выведено окно с игровой картой длины 5 ширины 3

python3 main.py -gui true -- пользователю будет предложено ввести размер поля, а потом будет выведено окно с игровой картой заданного размера

python3 main.py -mt '2 0 | 2 0' -save doc_4_save -- результат вычислений будет записан в файл file_4_save

python3 main.py -mt '2 0 | 2 0' -save doc_4_save -- результат вычислений будет записан в файл file_4_save

python3 main.py -mt '2 0 | 2 0' -- результат вычислений будет выведен на консоль

python3 main.py -doc doc_with_data -save doc_4_save -- карта будет считана из файла doc_with_data, результат вычислений будет записан в файл file_4_save

python3 main.py -doc doc_with_data -- карта будет считана из файла doc_with_data, результат вычислений будет выведен на консоль

python3 main.py - пользователю будет предложен ввод вручную 